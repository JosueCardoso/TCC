{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador do Microsoft (R) Visual C#",
        "version": "4.6.0.0",
        "fileVersion": "4.6.0-3.23259.8 (c3cc1d0c)",
        "semanticVersion": "4.6.0",
        "language": "pt-BR"
      },
      "results": [
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Não é possível converter um literal nulo em um tipo de referência não anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Controllers/BaseController.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 63,
                  "endLine": 20,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável 'sender' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 29,
                  "endLine": 100,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 29,
                  "endLine": 100,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável 'message' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 23,
                  "endLine": 101,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 23,
                  "endLine": 101,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Desreferência de uma referência possivelmente nula.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 68,
                  "endLine": 28,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Não é possível converter um literal nulo em um tipo de referência não anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Controllers/BaseController.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 85,
                  "endLine": 25,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Desreferência de uma referência possivelmente nula.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 68,
                  "endLine": 39,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Desreferência de uma referência possivelmente nula.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 33,
                  "endLine": 74,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1006",
          "level": "warning",
          "message": "Remove the default parameter value to match the signature of overridden method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 71,
                  "endLine": 37,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 44,
                  "endLine": 74,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user.Votes.FirstOrDefault(x => x.StoryId == storyId)' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///G:/Estimatz/Estimatz.API/Estimatz.API/Application/Estimatz.API/Hubs/PlanningHub.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 33,
                  "endLine": 74,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Desreferência de uma referência possivelmente nula.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "O campo não anulável precisa conter um valor não nulo ao sair do construtor. Considere declará-lo como anulável.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8625": {
          "id": "CS8625",
          "shortDescription": "Não é possível converter um literal nulo em um tipo de referência não anulável.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8625)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1006": {
          "id": "S1006",
          "shortDescription": "Method overrides should not change parameter defaults",
          "fullDescription": "Default arguments are determined by the static type of the object. If a default argument is different for a parameter in an overriding method, the value used in the call will be different when calls are made via the base or derived object, which may be contrary to developer expectations.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1006",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2259": {
          "id": "S2259",
          "shortDescription": "Null pointers should not be dereferenced",
          "fullDescription": "A reference to null should never be dereferenced/accessed. Doing so will cause a NullReferenceException to be thrown. At best, such an exception will cause abrupt program termination. At worst, it could expose debugging information that would be useful to an attacker, or it could allow an attacker to bypass security measures.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2259",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6602": {
          "id": "S6602",
          "shortDescription": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension",
          "fullDescription": "Both the List.Find method and IEnumerable.FirstOrDefault method can be used to find the first element that satisfies a given condition in a collection. However, List.Find can be faster than IEnumerable.FirstOrDefault for List objects. For small collections, the performance difference may be minor, but for large collections, it can make a noticeable difference. The same applies for ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6602",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}