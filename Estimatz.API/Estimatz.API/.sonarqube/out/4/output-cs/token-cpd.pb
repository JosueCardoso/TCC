Ô
hG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\RoomRepository\IRoomRepository.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
RoomRepository *
{ 
public 

	interface 
IRoomRepository $
{ 
Task 
< 
ItemResponse 
< 
Room 
> 
>  

CreateRoom! +
(+ ,
Room, 0
room1 5
)5 6
;6 7
Task		 
<		 
Room		 
>		 
FindRoom		 
(		 
Guid		  
id		! #
)		# $
;		$ %
List

 
<

 

SimpleRoom

 
>

 
GetAllRoomByUserId

 +
(

+ ,
Guid

, 0
userId

1 7
)

7 8
;

8 9
Task 
< 
ItemResponse 
< 
Room 
> 
>  

DeleteRoom! +
(+ ,
Guid, 0
id1 3
)3 4
;4 5
Task 
< 
ItemResponse 
< 
Room 
> 
>  
UpdateStatusRoom! 1
(1 2
Guid2 6
roomId7 =
,= >

RoomStatus? I
newRoomStatusJ W
)W X
;X Y
} 
} æ+
gG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\RoomRepository\RoomRepository.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
RoomRepository *
{ 
public 

class 
RoomRepository 
:  !
IRoomRepository" 1
{		 
private

 
readonly

 
ICosmosDBClient

 (
_cosmosDbClient

) 8
;

8 9
private 
readonly 
string 
_partitioKey  ,
=- .
$str/ 5
;5 6
public 
RoomRepository 
( 
ICosmosDBClient -
cosmosDBClient. <
)< =
{ 	
_cosmosDbClient 
= 
cosmosDBClient ,
;, -
} 	
public 
async 
Task 
< 
ItemResponse &
<& '
Room' +
>+ ,
>, -

CreateRoom. 8
(8 9
Room9 =
room> B
)B C
{ 	
room 
. 
PartitionKey 
= 
_partitioKey  ,
;, -
return 
await 
_cosmosDbClient (
.( )
CreateItemAsync) 8
(8 9
room9 =
)= >
;> ?
} 	
public 
async 
Task 
< 
Room 
> 
FindRoom  (
(( )
Guid) -
id. 0
)0 1
{ 	
return 
await 
_cosmosDbClient (
.( )
GetItem) 0
<0 1
Room1 5
>5 6
(6 7
id7 9
.9 :
ToString: B
(B C
)C D
,D E
_partitioKeyF R
)R S
;S T
} 	
public 
List 
< 

SimpleRoom 
> 
GetAllRoomByUserId  2
(2 3
Guid3 7
userId8 >
)> ?
{ 	
return 
_cosmosDbClient "
." #
GetItemQueryable# 3
<3 4
Room4 8
>8 9
(9 :
): ;
.; <
Where< A
(A B
xB C
=>D F
xG H
.H I
UserIdI O
==P R
userIdS Y
)Y Z
.Z [
Select[ a
(a b
xb c
=>d f
newg j

SimpleRoomk u
{   
Id!! 
=!! 
x!! 
.!! 
Id!! 
,!! 
PartitionKey"" 
="" 
x""  
.""  !
PartitionKey""! -
,""- .
RoomName## 
=## 
x## 
.## 

RoomConfig## '
.##' (
RoomName##( 0
,##0 1
Status$$ 
=$$ 
x$$ 
.$$ 
Status$$ !
,$$! "
FinishedStories%% 
=%%  !
x%%" #
.%%# $
UserStories%%$ /
.%%/ 0
Where%%0 5
(%%5 6
y%%6 7
=>%%8 :
y%%; <
.%%< =
Status%%= C
==%%D F
StoryStatus%%G R
.%%R S
Finished%%S [
)%%[ \
.%%\ ]
Count%%] b
(%%b c
)%%c d
,%%d e
TotalCountStories&& !
=&&" #
x&&$ %
.&&% &
UserStories&&& 1
.&&1 2
Count&&2 7
(&&7 8
)&&8 9
}'' 
)'' 
.'' 
ToList'' 
('' 
)'' 
;'' 
}(( 	
public** 
async** 
Task** 
<** 
ItemResponse** &
<**& '
Room**' +
>**+ ,
>**, -

DeleteRoom**. 8
(**8 9
Guid**9 =
id**> @
)**@ A
{++ 	
return,, 
await,, 
_cosmosDbClient,, (
.,,( )

DeleteItem,,) 3
<,,3 4
Room,,4 8
>,,8 9
(,,9 :
id,,: <
.,,< =
ToString,,= E
(,,E F
),,F G
,,,G H
_partitioKey,,I U
),,U V
;,,V W
}-- 	
public// 
async// 
Task// 
<// 
ItemResponse// &
<//& '
Room//' +
>//+ ,
>//, -
UpdateStatusRoom//. >
(//> ?
Guid//? C
roomId//D J
,//J K

RoomStatus//L V
newRoomStatus//W d
)//d e
{00 	
List11 
<11 
PatchOperation11 
>11  

operations11! +
=11, -
new11. 1
(111 2
)112 3
{22 
PatchOperation33 
.33 
Set33 "
(33" #
$str33# ,
,33, -
(33. /
int33/ 2
)332 3
newRoomStatus333 @
)33@ A
}44 
;44 
return66 
await66 
_cosmosDbClient66 (
.66( )
PatchUpdate66) 4
<664 5
Room665 9
>669 :
(66: ;
roomId66; A
.66A B
ToString66B J
(66J K
)66K L
,66L M
_partitioKey66N Z
,66Z [

operations66\ f
)66f g
;66g h
}77 	
}88 
}99 ˆ
jG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\StoryRepository\IStoryRepository.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
StoryRepository +
{ 
public 

	interface 
IStoryRepository %
{ 
Task		 
<		 
ItemResponse		 
<		 
Room		 
>		 
>		  
AddStory		! )
(		) *
Guid		* .
roomId		/ 5
,		5 6
Story		7 <
story		= B
)		B C
;		C D
Task

 
<

 
ItemResponse

 
<

 
Room

 
>

 
>

  
RemoveStory

! ,
(

, -
int

- 0

indexArray

1 ;
,

; <
Guid

= A
roomId

B H
)

H I
;

I J
Task 
< 
ItemResponse 
< 
Room 
> 
>  
UpdateStatusStory! 2
(2 3
int3 6

indexArray7 A
,A B
StoryStatusC N
newStatusStoryO ]
,] ^
Guid_ c
roomIdd j
)j k
;k l
Task 
< 
ItemResponse 
< 
Room 
> 
>  
UpdateStoryVote! 0
(0 1
Guid1 5
roomId6 <
,< =
int> A

storyIndexB L
,L M
VotingResultN Z
votingResult[ g
)g h
;h i
} 
} Œ+
iG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\StoryRepository\StoryRepository.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
StoryRepository +
{ 
public 

class 
StoryRepository  
:! "
IStoryRepository# 3
{		 
private

 
readonly

 
ICosmosDBClient

 (
_cosmosDbClient

) 8
;

8 9
private 
readonly 
string 
_partitioKey  ,
=- .
$str/ 5
;5 6
public 
StoryRepository 
( 
ICosmosDBClient .
cosmosDbClient/ =
)= >
{ 	
_cosmosDbClient 
= 
cosmosDbClient ,
;, -
} 	
public 
async 
Task 
< 
ItemResponse &
<& '
Room' +
>+ ,
>, -
AddStory. 6
(6 7
Guid7 ;
roomId< B
,B C
StoryD I
storyJ O
)O P
{ 	
List 
< 
PatchOperation 
>  

operations! +
=, -
new. 1
(1 2
)2 3
{ 
PatchOperation 
. 
Add "
(" #
$str# 3
,3 4
story5 :
): ;
} 
; 
return 
await 
_cosmosDbClient (
.( )
PatchUpdate) 4
<4 5
Room5 9
>9 :
(: ;
roomId; A
.A B
ToStringB J
(J K
)K L
,L M
_partitioKeyN Z
,Z [

operations\ f
)f g
;g h
} 	
public 
async 
Task 
< 
ItemResponse &
<& '
Room' +
>+ ,
>, -
RemoveStory. 9
(9 :
int: =

indexArray> H
,H I
GuidJ N
roomIdO U
)U V
{ 	
List 
< 
PatchOperation 
>  

operations! +
=, -
new. 1
(1 2
)2 3
{ 
PatchOperation   
.   
Remove   %
(  % &
$str  & 5
+  6 7

indexArray  8 B
)  B C
}!! 
;!! 
return## 
await## 
_cosmosDbClient## (
.##( )
PatchUpdate##) 4
<##4 5
Room##5 9
>##9 :
(##: ;
roomId##; A
.##A B
ToString##B J
(##J K
)##K L
,##L M
_partitioKey##N Z
,##Z [

operations##\ f
)##f g
;##g h
}$$ 	
public&& 
async&& 
Task&& 
<&& 
ItemResponse&& &
<&&& '
Room&&' +
>&&+ ,
>&&, -
UpdateStatusStory&&. ?
(&&? @
int&&@ C

indexArray&&D N
,&&N O
StoryStatus&&P [
newStatusStory&&\ j
,&&j k
Guid&&l p
roomId&&q w
)&&w x
{'' 	
List(( 
<(( 
PatchOperation(( 
>((  

operations((! +
=((, -
new((. 1
(((1 2
)((2 3
{)) 
PatchOperation** 
.** 
Set** "
(**" #
$str**# 2
+**3 4

indexArray**5 ?
+**@ A
$str**B K
,**K L
(**M N
int**N Q
)**Q R
newStatusStory**R `
)**` a
}++ 
;++ 
return-- 
await-- 
_cosmosDbClient-- (
.--( )
PatchUpdate--) 4
<--4 5
Room--5 9
>--9 :
(--: ;
roomId--; A
.--A B
ToString--B J
(--J K
)--K L
,--L M
_partitioKey--N Z
,--Z [

operations--\ f
)--f g
;--g h
}.. 	
public00 
async00 
Task00 
<00 
ItemResponse00 &
<00& '
Room00' +
>00+ ,
>00, -
UpdateStoryVote00. =
(00= >
Guid00> B
roomId00C I
,00I J
int00K N

storyIndex00O Y
,00Y Z
VotingResult00[ g
votingResult00h t
)00t u
{11 	
List22 
<22 
PatchOperation22 
>22  

operations22! +
=22, -
new22. 1
(221 2
)222 3
{33 
PatchOperation44 
.44 
Set44 "
(44" #
$str44# 2
+443 4

storyIndex445 ?
+44@ A
$str44B O
,44O P
votingResult44Q ]
)44] ^
}55 
;55 
return77 
await77 
_cosmosDbClient77 (
.77( )
PatchUpdate77) 4
<774 5
Room775 9
>779 :
(77: ;
roomId77; A
.77A B
ToString77B J
(77J K
)77K L
,77L M
_partitioKey77N Z
,77Z [

operations77\ f
)77f g
;77g h
}88 	
}99 
}:: Þ
iG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\UserRepository\Cache\IUserCache.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
UserRepository *
.* +
Cache+ 0
{ 
public 

	interface 

IUserCache 
{ 
List 
< 
UserPlanning 
> 
GetAllUserByRoom +
(+ ,
Guid, 0
roomId1 7
)7 8
;8 9
void 
AddUser 
( 
UserPlanning !
user" &
)& '
;' (
void		 

RemoveUser		 
(		 
UserPlanning		 $
user		% )
)		) *
;		* +
void

 
SetVote

 
(

 
Guid

 
roomId

  
,

  !
Guid

" &
userId

' -
,

- .
Guid

/ 3
storyId

4 ;
,

; <
string

= C
vote

D H
)

H I
;

I J
void 
	TurnCards 
( 
Guid 
roomId "
," #
Guid$ (
storyId) 0
)0 1
;1 2
void 
RefreshVotes 
( 
Guid 
roomId %
,% &
Guid' +
storyId, 3
)3 4
;4 5
} 
} ™D
hG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\UserRepository\Cache\UserCache.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
UserRepository *
.* +
Cache+ 0
{ 
public 

class 
	UserCache 
: 

IUserCache '
{		 
private

  
ConcurrentDictionary

 $
<

$ %
Guid

% )
,

) *
List

+ /
<

/ 0
UserPlanning

0 <
>

< =
>

= >
_rooms

? E
=

F G
new

H K 
ConcurrentDictionary

L `
<

` a
Guid

a e
,

e f
List

g k
<

k l
UserPlanning

l x
>

x y
>

y z
(

z {
)

{ |
;

| }
public 
void 
AddUser 
( 
UserPlanning (
user) -
)- .
{ 	
if 
( 
_rooms 
. 
TryGetValue "
(" #
user# '
.' (
RoomId( .
,. /
out0 3
var4 7
users8 =
)= >
&&? A
!B C
usersC H
.H I
ExistsI O
(O P
xP Q
=>R T
xU V
.V W
UserIdW ]
==^ `
usera e
.e f
UserIdf l
)l m
)m n
users 
. 
Add 
( 
user 
) 
;  
else 
_rooms 
. 
TryAdd 
( 
user "
." #
RoomId# )
,) *
new+ .
List/ 3
<3 4
UserPlanning4 @
>@ A
{B C
userD H
}I J
)J K
;K L
} 	
public 
void 

RemoveUser 
( 
UserPlanning +
user, 0
)0 1
{ 	
if 
( 
_rooms 
. 
TryGetValue "
(" #
user# '
.' (
RoomId( .
,. /
out0 3
var4 7
users8 =
)= >
&&? A
usersB G
.G H
ExistsH N
(N O
xO P
=>Q S
xT U
.U V
UserIdV \
==] _
user` d
.d e
UserIde k
)k l
)l m
users 
. 
	RemoveAll 
(  
x  !
=>! #
x# $
.$ %
UserId% +
==, .
user/ 3
.3 4
UserId4 :
): ;
;; <
} 	
public 
List 
< 
UserPlanning  
>  !
GetAllUserByRoom" 2
(2 3
Guid3 7
roomId8 >
)> ?
=>@ B
_roomsC I
[I J
roomIdJ P
]P Q
.Q R
ToListR X
(X Y
)Y Z
;Z [
public 
void 
SetVote 
( 
Guid  
roomId! '
,' (
Guid) -
userId. 4
,4 5
Guid6 :
storyId; B
,B C
stringD J
voteK O
)O P
{ 	
if 
( 
_rooms 
. 
TryGetValue "
(" #
roomId# )
,) *
out+ .
var/ 2
users3 8
)8 9
&&: <
users= B
.B C
ExistsC I
(I J
xJ K
=>L N
xO P
.P Q
UserIdQ W
==X Z
userId[ a
)a b
)b c
{ 
var   
user   
=   
users    
.    !
Find  ! %
(  % &
x  & '
=>  ( *
x  + ,
.  , -
UserId  - 3
==  4 6
userId  7 =
)  = >
;  > ?
if"" 
("" 
user"" 
."" 
Votes"" 
is""  
null""! %
||""& (
user"") -
.""- .
Votes"". 3
.""3 4
Count""4 9
=="": <
$num""= >
)""> ?
{## 
user$$ 
.$$ 
Votes$$ 
=$$  
new$$! $
List$$% )
<$$) *
	StoryVote$$* 3
>$$3 4
{%% 
new&& 
	StoryVote&& %
{'' 
StoryId(( #
=(($ %
storyId((& -
,((- .
Vote))  
=))! "
vote))# '
}** 
}++ 
;++ 
},, 
else-- 
if-- 
(-- 
user-- 
.-- 
Votes-- "
.--" #
Exists--# )
(--) *
x--* +
=>--, .
x--/ 0
.--0 1
StoryId--1 8
==--9 ;
storyId--< C
)--C D
)--D E
{.. 
user// 
.// 
Votes// 
.// 
Find// #
(//# $
x//$ %
=>//& (
x//) *
.//* +
StoryId//+ 2
==//3 5
storyId//6 =
)//= >
.//> ?
Vote//? C
=//D E
vote//F J
;//J K
}00 
else11 
{22 
user33 
.33 
Votes33 
.33 
Add33 "
(33" #
new33# &
	StoryVote33' 0
{44 
StoryId55 
=55  !
storyId55" )
,55) *
Vote66 
=66 
vote66 #
}77 
)77 
;77 
}88 
}99 
}:: 	
public<< 
void<< 
	TurnCards<< 
(<< 
Guid<< "
roomId<<# )
,<<) *
Guid<<+ /
storyId<<0 7
)<<7 8
{== 	
if>> 
(>> 
_rooms>> 
.>> 
TryGetValue>> "
(>>" #
roomId>># )
,>>) *
out>>+ .
var>>/ 2
users>>3 8
)>>8 9
)>>9 :
{?? 
foreach@@ 
(@@ 
var@@ 
user@@ !
in@@" $
users@@% *
)@@* +
{AA 
ifBB 
(BB 
userBB 
.BB 
VotesBB !
.BB! "
ExistsBB" (
(BB( )
xBB) *
=>BB* ,
xBB, -
.BB- .
StoryIdBB. 5
==BB6 8
storyIdBB9 @
)BB@ A
)BBA B
userCC 
.CC 
VotesCC "
.CC" #
FindCC# '
(CC' (
xCC( )
=>CC* ,
xCC- .
.CC. /
StoryIdCC/ 6
==CC7 9
storyIdCC: A
)CCA B
.CCB C
	TurnCardsCCC L
=CCM N
trueCCO S
;CCS T
}DD 
}EE 
}FF 	
publicHH 
voidHH 
RefreshVotesHH  
(HH  !
GuidHH! %
roomIdHH& ,
,HH, -
GuidHH. 2
storyIdHH3 :
)HH: ;
{II 	
ifJJ 
(JJ 
_roomsJJ 
.JJ 
TryGetValueJJ "
(JJ" #
roomIdJJ# )
,JJ) *
outJJ+ .
varJJ/ 2
usersJJ3 8
)JJ8 9
)JJ9 :
{KK 
foreachLL 
(LL 
varLL 
userLL !
inLL" $
usersLL% *
)LL* +
{MM 
ifNN 
(NN 
userNN 
.NN 
VotesNN "
.NN" #
ExistsNN# )
(NN) *
xNN* +
=>NN, .
xNN/ 0
.NN0 1
StoryIdNN1 8
==NN9 ;
storyIdNN< C
)NNC D
)NND E
{OO 
varPP 
votePP  
=PP! "
userPP# '
.PP' (
VotesPP( -
.PP- .
FindPP. 2
(PP2 3
xPP3 4
=>PP5 7
xPP8 9
.PP9 :
StoryIdPP: A
==PPB D
storyIdPPE L
)PPL M
;PPM N
voteQQ 
.QQ 
	TurnCardsQQ &
=QQ' (
falseQQ) .
;QQ. /
voteRR 
.RR 
VoteRR !
=RR" #
$strRR$ &
;RR& '
}TT 
}UU 
}VV 
}WW 	
}XX 
}YY À
hG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\UserRepository\IUserRepository.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
UserRepository *
{ 
public 

	interface 
IUserRepository $
{ 
void 
AddUser 
( 
UserPlanning !
user" &
)& '
;' (
void 

RemoveUser 
( 
UserPlanning $
user% )
)) *
;* +
List		 
<		 
UserPlanning		 
>		 
GetAllUserByRoom		 +
(		+ ,
Guid		, 0
roomId		1 7
)		7 8
;		8 9
void

 
SetVote

 
(

 
Guid

 
roomId

  
,

  !
Guid

" &
userId

' -
,

- .
Guid

/ 3
storyId

4 ;
,

; <
string

= C
vote

D H
)

H I
;

I J
void 
	TurnCards 
( 
Guid 
roomId "
," #
Guid$ (
storyId) 0
)0 1
;1 2
void 
RefreshVotes 
( 
Guid 
roomId %
,% &
Guid' +
storyId, 3
)3 4
;4 5
} 
} ©
gG:\Estimatz\Estimatz.API\Estimatz.API\Infrastructure\Estimatz.API.Data\UserRepository\UserRepository.cs
	namespace 	
Estimatz
 
. 
API 
. 
Data 
. 
UserRepository *
{ 
public 

class 
UserRepository 
:  !
IUserRepository" 1
{ 
private 
readonly 

IUserCache #

_userCache$ .
;. /
public

 
UserRepository

 
(

 

IUserCache

 (
	userCache

) 2
)

2 3
{ 	

_userCache 
= 
	userCache "
;" #
} 	
public 
void 
AddUser 
( 
UserPlanning (
user) -
)- .
{ 	

_userCache 
. 
AddUser 
( 
user #
)# $
;$ %
} 	
public 
void 

RemoveUser 
( 
UserPlanning +
user, 0
)0 1
{ 	

_userCache 
. 

RemoveUser !
(! "
user" &
)& '
;' (
} 	
public 
List 
< 
UserPlanning  
>  !
GetAllUserByRoom" 2
(2 3
Guid3 7
roomId8 >
)> ?
=>@ B

_userCacheC M
.M N
GetAllUserByRoomN ^
(^ _
roomId_ e
)e f
;f g
public 
void 
SetVote 
( 
Guid  
roomId! '
,' (
Guid) -
userId. 4
,4 5
Guid6 :
storyId; B
,B C
stringD J
voteK O
)O P
{ 	

_userCache 
. 
SetVote 
( 
roomId %
,% &
userId' -
,- .
storyId/ 6
,6 7
vote8 <
)< =
;= >
} 	
public   
void   
	TurnCards   
(   
Guid   "
roomId  # )
,  ) *
Guid  + /
storyId  0 7
)  7 8
{!! 	

_userCache"" 
."" 
	TurnCards""  
(""  !
roomId""! '
,""' (
storyId"") 0
)""0 1
;""1 2
}## 	
public%% 
void%% 
RefreshVotes%%  
(%%  !
Guid%%! %
roomId%%& ,
,%%, -
Guid%%. 2
storyId%%3 :
)%%: ;
{&& 	

_userCache'' 
.'' 
RefreshVotes'' #
(''# $
roomId''$ *
,''* +
storyId'', 3
)''3 4
;''4 5
}(( 	
})) 
}** 